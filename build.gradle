plugins {
    alias(libs.plugins.graalvm)
    id 'application'
    id 'java'
}

sourceSets {
    graal
}

repositories {
    mavenCentral()
}

dependencies {
    implementation libs.gson
    implementation libs.imageio.webp
    implementation libs.imgscalr
    implementation libs.jave
    implementation libs.bundles.logback
    implementation libs.telegram.bot.api
    implementation libs.tika

    testImplementation libs.hamcrest
    testImplementation libs.junit
    testImplementation libs.mockwebserver

    graalCompileOnly sourceSets.main.output
    graalImplementation libs.jave
    nativeImageCompileOnly sourceSets.graal.output.classesDirs
}

configurations {
    nativeImageClasspath.extendsFrom(graalImplementation)
}

group = 'com.github.stickerifier'
version = '1.0'
description = 'Telegram bot to convert medias in the format required to be used as Telegram stickers'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(20)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs += '--enable-preview'
}

test {
    useJUnitPlatform()
    jvmArgs(['--enable-preview', '-Djava.awt.headless=true'])
}

application {
    mainClass = 'com.github.stickerifier.stickerify.runner.Main'
    applicationDefaultJvmArgs = ['--enable-preview', '-Djava.awt.headless=true']
}

graalvmNative {
    toolchainDetection = false
    agent {
        enabled = true
        metadataCopy {
            inputTaskNames.add("test")
            outputDirectories.add("src/main/resources/META-INF/native-image")
            mergeWithExisting = true
        }
    }
    binaries {
        main {
            buildArgs.addAll('--static', '--libc=musl', '--enable-url-protocols=https')
            jvmArgs.addAll('--enable-preview', '-Djava.io.tmpdir=/', '-Djava.library.path=/', '-Djava.awt.headless=true')
            imageName = 'stickerify'
            mainClass = 'com.github.stickerifier.stickerify.runner.Native'
        }
    }
    metadataRepository {
        enabled = true
    }
}
